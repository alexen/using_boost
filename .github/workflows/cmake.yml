name: CMake

# Реагируем на любой push в любую ветку
on: [push]

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build-type: [Debug, Release]
        build-shared-libs: [ON, OFF]

    steps:
    - name: Checkout repo with submodules
      uses: actions/checkout@v2
      with:
        submodules: recursive
    
    - name: Install required packages
      run: xargs sudo apt-get install --yes <./requirements.txt

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build-type}} -DBUILD_SHARED_LIBS=${{matrix.build-shared-libs}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{matrix.build-type}} --parallel $(nproc)

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
      
